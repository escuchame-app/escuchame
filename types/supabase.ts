/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/review_sessions": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.review_sessions.id"];
          user_id?: parameters["rowFilter.review_sessions.user_id"];
          started_at?: parameters["rowFilter.review_sessions.started_at"];
          last_activity_at?: parameters["rowFilter.review_sessions.last_activity_at"];
          completed_at?: parameters["rowFilter.review_sessions.completed_at"];
          created_at?: parameters["rowFilter.review_sessions.created_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["review_sessions"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** review_sessions */
          review_sessions?: definitions["review_sessions"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.review_sessions.id"];
          user_id?: parameters["rowFilter.review_sessions.user_id"];
          started_at?: parameters["rowFilter.review_sessions.started_at"];
          last_activity_at?: parameters["rowFilter.review_sessions.last_activity_at"];
          completed_at?: parameters["rowFilter.review_sessions.completed_at"];
          created_at?: parameters["rowFilter.review_sessions.created_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.review_sessions.id"];
          user_id?: parameters["rowFilter.review_sessions.user_id"];
          started_at?: parameters["rowFilter.review_sessions.started_at"];
          last_activity_at?: parameters["rowFilter.review_sessions.last_activity_at"];
          completed_at?: parameters["rowFilter.review_sessions.completed_at"];
          created_at?: parameters["rowFilter.review_sessions.created_at"];
        };
        body: {
          /** review_sessions */
          review_sessions?: definitions["review_sessions"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/cards": {
    get: {
      parameters: {
        query: {
          language_id?: parameters["rowFilter.cards.language_id"];
          card_set_id?: parameters["rowFilter.cards.card_set_id"];
          native_translation?: parameters["rowFilter.cards.native_translation"];
          foreign_translation?: parameters["rowFilter.cards.foreign_translation"];
          new_word?: parameters["rowFilter.cards.new_word"];
          difficulty?: parameters["rowFilter.cards.difficulty"];
          foreign_cloze?: parameters["rowFilter.cards.foreign_cloze"];
          filename?: parameters["rowFilter.cards.filename"];
          created_at?: parameters["rowFilter.cards.created_at"];
          id?: parameters["rowFilter.cards.id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["cards"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** cards */
          cards?: definitions["cards"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          language_id?: parameters["rowFilter.cards.language_id"];
          card_set_id?: parameters["rowFilter.cards.card_set_id"];
          native_translation?: parameters["rowFilter.cards.native_translation"];
          foreign_translation?: parameters["rowFilter.cards.foreign_translation"];
          new_word?: parameters["rowFilter.cards.new_word"];
          difficulty?: parameters["rowFilter.cards.difficulty"];
          foreign_cloze?: parameters["rowFilter.cards.foreign_cloze"];
          filename?: parameters["rowFilter.cards.filename"];
          created_at?: parameters["rowFilter.cards.created_at"];
          id?: parameters["rowFilter.cards.id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          language_id?: parameters["rowFilter.cards.language_id"];
          card_set_id?: parameters["rowFilter.cards.card_set_id"];
          native_translation?: parameters["rowFilter.cards.native_translation"];
          foreign_translation?: parameters["rowFilter.cards.foreign_translation"];
          new_word?: parameters["rowFilter.cards.new_word"];
          difficulty?: parameters["rowFilter.cards.difficulty"];
          foreign_cloze?: parameters["rowFilter.cards.foreign_cloze"];
          filename?: parameters["rowFilter.cards.filename"];
          created_at?: parameters["rowFilter.cards.created_at"];
          id?: parameters["rowFilter.cards.id"];
        };
        body: {
          /** cards */
          cards?: definitions["cards"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/card_sets": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.card_sets.id"];
          created_at?: parameters["rowFilter.card_sets.created_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["card_sets"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** card_sets */
          card_sets?: definitions["card_sets"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.card_sets.id"];
          created_at?: parameters["rowFilter.card_sets.created_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.card_sets.id"];
          created_at?: parameters["rowFilter.card_sets.created_at"];
        };
        body: {
          /** card_sets */
          card_sets?: definitions["card_sets"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/review_responses": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.review_responses.id"];
          user_id?: parameters["rowFilter.review_responses.user_id"];
          review_session_id?: parameters["rowFilter.review_responses.review_session_id"];
          card_id?: parameters["rowFilter.review_responses.card_id"];
          correct?: parameters["rowFilter.review_responses.correct"];
          created_at?: parameters["rowFilter.review_responses.created_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["review_responses"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** review_responses */
          review_responses?: definitions["review_responses"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.review_responses.id"];
          user_id?: parameters["rowFilter.review_responses.user_id"];
          review_session_id?: parameters["rowFilter.review_responses.review_session_id"];
          card_id?: parameters["rowFilter.review_responses.card_id"];
          correct?: parameters["rowFilter.review_responses.correct"];
          created_at?: parameters["rowFilter.review_responses.created_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.review_responses.id"];
          user_id?: parameters["rowFilter.review_responses.user_id"];
          review_session_id?: parameters["rowFilter.review_responses.review_session_id"];
          card_id?: parameters["rowFilter.review_responses.card_id"];
          correct?: parameters["rowFilter.review_responses.correct"];
          created_at?: parameters["rowFilter.review_responses.created_at"];
        };
        body: {
          /** review_responses */
          review_responses?: definitions["review_responses"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/languages": {
    get: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.languages.created_at"];
          id?: parameters["rowFilter.languages.id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["languages"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** languages */
          languages?: definitions["languages"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.languages.created_at"];
          id?: parameters["rowFilter.languages.id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.languages.created_at"];
          id?: parameters["rowFilter.languages.id"];
        };
        body: {
          /** languages */
          languages?: definitions["languages"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  review_sessions: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default gen_random_uuid()
     */
    id: string;
    /** Format: uuid */
    user_id: string;
    /** Format: timestamp with time zone */
    started_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    last_activity_at: string;
    /** Format: timestamp with time zone */
    completed_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string;
  };
  cards: {
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `languages.id`.<fk table='languages' column='id'/>
     */
    language_id: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `card_sets.id`.<fk table='card_sets' column='id'/>
     */
    card_set_id: string;
    /** Format: text */
    native_translation: string;
    /** Format: text */
    foreign_translation: string;
    /** Format: character varying */
    new_word: string;
    /** Format: bigint */
    difficulty: number;
    /** Format: character varying */
    foreign_cloze: string;
    /** Format: character varying */
    filename: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default gen_random_uuid()
     */
    id: string;
  };
  card_sets: {
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string;
  };
  review_responses: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default gen_random_uuid()
     */
    id: string;
    /** Format: uuid */
    user_id: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `review_sessions.id`.<fk table='review_sessions' column='id'/>
     */
    review_session_id: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `cards.id`.<fk table='cards' column='id'/>
     */
    card_id: string;
    /** Format: boolean */
    correct: boolean;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string;
  };
  languages: {
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description review_sessions */
  "body.review_sessions": definitions["review_sessions"];
  /** Format: uuid */
  "rowFilter.review_sessions.id": string;
  /** Format: uuid */
  "rowFilter.review_sessions.user_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.review_sessions.started_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.review_sessions.last_activity_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.review_sessions.completed_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.review_sessions.created_at": string;
  /** @description cards */
  "body.cards": definitions["cards"];
  /** Format: character varying */
  "rowFilter.cards.language_id": string;
  /** Format: character varying */
  "rowFilter.cards.card_set_id": string;
  /** Format: text */
  "rowFilter.cards.native_translation": string;
  /** Format: text */
  "rowFilter.cards.foreign_translation": string;
  /** Format: character varying */
  "rowFilter.cards.new_word": string;
  /** Format: bigint */
  "rowFilter.cards.difficulty": string;
  /** Format: character varying */
  "rowFilter.cards.foreign_cloze": string;
  /** Format: character varying */
  "rowFilter.cards.filename": string;
  /** Format: timestamp with time zone */
  "rowFilter.cards.created_at": string;
  /** Format: uuid */
  "rowFilter.cards.id": string;
  /** @description card_sets */
  "body.card_sets": definitions["card_sets"];
  /** Format: character varying */
  "rowFilter.card_sets.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.card_sets.created_at": string;
  /** @description review_responses */
  "body.review_responses": definitions["review_responses"];
  /** Format: uuid */
  "rowFilter.review_responses.id": string;
  /** Format: uuid */
  "rowFilter.review_responses.user_id": string;
  /** Format: uuid */
  "rowFilter.review_responses.review_session_id": string;
  /** Format: uuid */
  "rowFilter.review_responses.card_id": string;
  /** Format: boolean */
  "rowFilter.review_responses.correct": string;
  /** Format: timestamp with time zone */
  "rowFilter.review_responses.created_at": string;
  /** @description languages */
  "body.languages": definitions["languages"];
  /** Format: timestamp with time zone */
  "rowFilter.languages.created_at": string;
  /** Format: character varying */
  "rowFilter.languages.id": string;
}

export interface operations {}

export interface external {}
